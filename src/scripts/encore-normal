#!/system/bin/sh

# Sync to data in the rare case a device crashes
sync

if [ -f /data/encore/custom_default_cpu_gov ]; then
	default_cpu_gov=$(cat /data/encore/custom_default_cpu_gov)
else
	default_cpu_gov=$(cat /data/encore/default_cpu_gov)
fi
soc=$(cat /data/encore/soc_recognition)

apply() {
	if [ -f $2 ]; then
		chmod 644 $2 >/dev/null 2>&1
		echo $1 >$2 2>/dev/null
		chmod 444 $2 >/dev/null 2>&1
	fi
}

change_permission() {
	if [ -f $2 ]; then
		chmod $1 $2
	fi
}

# Disable battery saver module
if [ -f /sys/module/battery_saver/parameters/enabled ]; then
	if grep -qo '[0-9]\+' /sys/module/battery_saver/parameters/enabled; then
		apply 0 /sys/module/battery_saver/parameters/enabled
	else
		apply N /sys/module/battery_saver/parameters/enabled
	fi
fi

if [ -f "/sys/kernel/debug/sched_features" ]; then
	# Consider scheduling tasks that are eager to run
	apply NEXT_BUDDY /sys/kernel/debug/sched_features

	# Schedule tasks on their origin CPU if possible
	apply TTWU_QUEUE /sys/kernel/debug/sched_features
fi

if [ -d "/dev/stune/" ]; then
	# We are not concerned with prioritizing latency
	apply 0 /dev/stune/top-app/schedtune.prefer_idle

	# Mark top-app as boosted, find high-performing CPUs
	apply 1 /dev/stune/top-app/schedtune.boost
fi

# Oppo/Oplus/Realme Touchpanel
tp_path="/proc/touchpanel"
if [ -d tp_path ]; then
	apply "0" $tp_path/game_switch_enable
	apply "1" $tp_path/oplus_tp_limit_enable
	apply "1" $tp_path/oppo_tp_limit_enable
	apply "0" $tp_path/oplus_tp_direction
	apply "0" $tp_path/oppo_tp_direction
fi

# Memory Tweaks
apply 120 /proc/sys/vm/vfs_cache_pressure

# eMMC and UFS governor
for path in /sys/class/devfreq/*.ufshc; do
	apply simple_ondemand $path/governor
done &
for path in /sys/class/devfreq/mmc*; do
	apply simple_ondemand $path/governor
done &

# Restore min CPU frequency
for path in /sys/devices/system/cpu/cpufreq/policy*; do
	apply "$default_cpu_gov" "$path/scaling_governor"
done &
apply 1 /sys/devices/system/cpu/cpu1/online

# Restore default value
encore-utils restore_value

if [ -d /proc/ppm ]; then
	cluster=0
	for path in /sys/devices/system/cpu/cpufreq/policy*; do
		cpu_maxfreq=$(cat $path/cpuinfo_max_freq)
		cpu_minfreq=$(cat $path/cpuinfo_min_freq)
		apply "$cluster $cpu_maxfreq" /proc/ppm/policy/hard_userlimit_max_cpu_freq
		apply "$cluster $cpu_minfreq" /proc/ppm/policy/hard_userlimit_min_cpu_freq
		((cluster++))
	done
fi

for path in /sys/devices/system/cpu/*/cpufreq; do
	cpu_maxfreq=$(cat $path/cpuinfo_max_freq)
	cpu_minfreq=$(cat $path/cpuinfo_min_freq)
	apply "$cpu_maxfreq" $path/scaling_max_freq
	apply "$cpu_minfreq" $path/scaling_min_freq
done
change_permission 644 /sys/devices/virtual/thermal/thermal_message/cpu_limits

# I/O Tweaks
for queue in /sys/block/mmcblk0/queue /sys/block/mmcblk1/queue /sys/block/sd*/queue; do
	# Reduce heuristic read-ahead in exchange for I/O latency
	apply 128 "$queue/read_ahead_kb"

	# Reduce the maximum number of I/O requests in exchange for latency
	apply 64 "$queue/nr_requests"
done &

mediatek_tweak() {
	# PPM throttle
	if [ -f /proc/ppm/policy_status ]; then
		policy_file="/proc/ppm/policy_status"
		pwr_thro_idx=$(grep 'PPM_POLICY_PWR_THRO' $policy_file | sed 's/.*\[\(.*\)\].*/\1/')
		thermal_idx=$(grep 'PPM_POLICY_THERMAL' $policy_file | sed 's/.*\[\(.*\)\].*/\1/')

		apply "$pwr_thro_idx 1" $policy_file
		apply "$thermal_idx 1" $policy_file
	fi

	# MTK Power and CCI mode
	apply "0" /proc/cpufreq/cpufreq_cci_mode
	apply "0" /proc/cpufreq/cpufreq_power_mode

	# EAS/HMP Switch
	apply "1" /sys/devices/system/cpu/eas/enable

	# GPU Frequency
	if [ -d /proc/gpufreq ]; then
		apply "0" /proc/gpufreq/gpufreq_opp_freq 2>/dev/null
	elif [ -d /proc/gpufreqv2 ]; then
		apply -1 /proc/gpufreqv2/fix_target_opp_index
	fi

	# Disable GPU Power limiter
	if [ -f "/proc/gpufreq/gpufreq_power_limited" ]; then
		apply "ignore_batt_oc 0" /proc/gpufreq/gpufreq_power_limited
		apply "ignore_batt_percent 0" /proc/gpufreq/gpufreq_power_limited
		apply "ignore_low_batt 0" /proc/gpufreq/gpufreq_power_limited
		apply "ignore_thermal_protect 0" /proc/gpufreq/gpufreq_power_limited
		apply "ignore_pbm_limited 0" /proc/gpufreq/gpufreq_power_limited
	fi

	# Disable Power Budget management for new 5.x mtk kernels
	apply "stop 0" /proc/pbm/pbm_stop

	# Disable battery current limiter
	apply "stop 0" /proc/mtk_batoc_throttling/battery_oc_protect_stop

	# DRAM Frequency
	apply "-1" /sys/devices/platform/10012000.dvfsrc/helio-dvfsrc/dvfsrc_req_ddr_opp
	apply "-1" /sys/kernel/helio-dvfsrc/dvfsrc_force_vcore_dvfs_opp
	apply "userspace" /sys/class/devfreq/mtk-dvfsrc-devfreq/governor
	apply "userspace" /sys/devices/platform/soc/1c00f000.dvfsrc/mtk-dvfsrc-devfreq/devfreq/mtk-dvfsrc-devfreq/governor

	# Eara Thermal
	apply "1" /sys/kernel/eara_thermal/enable
}

snapdragon_tweak() {
	# Qualcomm CPU Bus and DRAM frequencies
	for path in /sys/class/devfreq/*cpu-ddr-latfloor*; do
		apply "compute" $path/governor
	done &

	for path in /sys/class/devfreq/*cpu*-lat; do
		apply "mem_latency" $path/governor
	done &

	for path in /sys/class/devfreq/*cpu-cpu-ddr-bw; do
		apply "bw_hwmon" $path/governor
	done &

	for path in /sys/class/devfreq/*cpu-cpu-llcc-bw; do
		apply "bw_hwmon" $path/governor
	done &

	if [ -d /sys/devices/system/cpu/bus_dcvs/LLCC ]; then
		max_freq=$(cat /sys/devices/system/cpu/bus_dcvs/LLCC/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		min_freq=$(cat /sys/devices/system/cpu/bus_dcvs/LLCC/available_frequencies | tr ' ' '\n' | sort -n | head -n 1)
		for path in /sys/devices/system/cpu/bus_dcvs/LLCC/*/max_freq; do
			apply $max_freq $path
		done &
		for path in /sys/devices/system/cpu/bus_dcvs/LLCC/*/min_freq; do
			apply $min_freq $path
		done &
	fi

	if [ -d /sys/devices/system/cpu/bus_dcvs/L3 ]; then
		max_freq=$(cat /sys/devices/system/cpu/bus_dcvs/L3/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		min_freq=$(cat /sys/devices/system/cpu/bus_dcvs/L3/available_frequencies | tr ' ' '\n' | sort -n | head -n 1)
		for path in /sys/devices/system/cpu/bus_dcvs/L3/*/max_freq; do
			apply $max_freq $path
		done &
		for path in /sys/devices/system/cpu/bus_dcvs/L3/*/min_freq; do
			apply $min_freq $path
		done &
	fi

	if [ -d /sys/devices/system/cpu/bus_dcvs/DDR ]; then
		max_freq=$(cat /sys/devices/system/cpu/bus_dcvs/DDR/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		min_freq=$(cat /sys/devices/system/cpu/bus_dcvs/DDR/available_frequencies | tr ' ' '\n' | sort -n | head -n 1)
		for path in /sys/devices/system/cpu/bus_dcvs/DDR/*/max_freq; do
			apply $max_freq $path
		done &
		for path in /sys/devices/system/cpu/bus_dcvs/DDR/*/min_freq; do
			apply $min_freq $path
		done &
	fi

	if [ -d /sys/devices/system/cpu/bus_dcvs/DDRQOS ]; then
		max_freq=$(cat /sys/devices/system/cpu/bus_dcvs/DDRQOS/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		min_freq=$(cat /sys/devices/system/cpu/bus_dcvs/DDRQOS/available_frequencies | tr ' ' '\n' | sort -n | head -n 1)
		for path in /sys/devices/system/cpu/bus_dcvs/DDRQOS/*/max_freq; do
			apply $max_freq $path
		done &
		for path in /sys/devices/system/cpu/bus_dcvs/DDRQOS/*/min_freq; do
			apply $min_freq $path
		done &
	fi

	# GPU Frequency
	gpu_path="/sys/class/kgsl/kgsl-3d0/devfreq"

	if [ -d $gpu_path ]; then
		max_freq=$(cat $gpu_path/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		min_freq=$(cat $gpu_path/available_frequencies | tr ' ' '\n' | sort -n | head -n 2)
		apply $min_freq $gpu_path/min_freq
		apply $max_freq $gpu_path/max_freq
	fi

	# GPU Bus
	for path in /sys/class/devfreq/*gpubw*; do
		apply "bw_vbif" $path/governor
	done &

	# Adreno Boost
	apply 1 /sys/class/kgsl/kgsl-3d0/devfreq/adrenoboost
}

exynos_tweak() {
	# GPU Frequency
	gpu_path="/sys/kernel/gpu"

	if [ -d $gpu_path ]; then
		max_freq=$(cat $gpu_path/gpu_available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		min_freq=$(cat $gpu_path/gpu_available_frequencies | tr ' ' '\n' | sort -n | head -n 2)
		apply $min_freq $gpu_path/gpu_min_clock
		apply $max_freq $gpu_path/gpu_max_clock
	fi

	mali_sysfs=$(find /sys/devices/platform/ -iname "*.mali" -print -quit 2>/dev/null)
	apply coarse_demand $mali_sysfs/power_policy
}

unisoc_tweak() {
	# GPU Frequency
	gpu_path=$(find /sys/class/devfreq/ -type d -iname "*.gpu" -print -quit 2>/dev/null)

	if [ -d $gpu_path ]; then
		max_freq=$(cat $gpu_path/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		min_freq=$(cat $gpu_path/available_frequencies | tr ' ' '\n' | sort -n | head -n 2)
		apply $min_freq $gpu_path/min_freq
		apply $max_freq $gpu_path/max_freq
	fi
}

tensor_tweak() {
	# GPU Frequency
	gpu_path=$(find /sys/devices/platform/ -type d -iname "*.mali" -print -quit 2>/dev/null)

	if [ -d $gpu_path ]; then
		max_freq=$(cat $gpu_path/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		min_freq=$(cat $gpu_path/available_frequencies | tr ' ' '\n' | sort -n | head -n 2)
		apply $min_freq $gpu_path/scaling_min_freq
		apply $max_freq $gpu_path/scaling_max_freq
	fi
}

case "$soc" in
1) mediatek_tweak ;;
2) snapdragon_tweak ;;
3) exynos_tweak ;;
4) unisoc_tweak ;;
5) tensor_tweak ;;
esac

wait
exit 0
